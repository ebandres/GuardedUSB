Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TkAnd
    TkArray
    TkArrow
    TkAtoi
    TkCBlock
    TkCBracket
    TkComma
    TkConcat
    TkDeclare
    TkDo
    TkEqual
    TkFalse
    TkFi
    TkFor
    TkGuard
    TkIf
    TkIn
    TkMax
    TkMin
    TkNEqual
    TkNot
    TkOBlock
    TkOBracket
    TkOd
    TkOr
    TkPrint
    TkPrintln
    TkRead
    TkRof
    TkSize
    TkSoForth
    TkString
    TkTo
    TkTrue

Grammar

Rule 0     S' -> declaration
Rule 1     declaration -> TkId TkTwoPoints TkInt TkSemiColon
Rule 2     assign -> TkId TkAsig expression TkSemiColon
Rule 3     expression -> expression TkPlus expression TkSemiColon
Rule 4     expression -> expression TkMinus expression TkSemiColon
Rule 5     expression -> expression TkMult expression TkSemiColon
Rule 6     expression -> expression TkDiv expression TkSemiColon
Rule 7     expression -> expression TkMod expression TkSemiColon
Rule 8     expression -> expression TkLess expression TkSemiColon
Rule 9     expression -> expression TkLeq expression TkSemiColon
Rule 10    expression -> expression TkGeq expression TkSemiColon
Rule 11    expression -> expression TkGreater expression TkSemiColon
Rule 12    expression -> TkOpenPar expression TkClosePar
Rule 13    expression -> TkNum TkSemiColon
Rule 14    expression -> TkId TkSemiColon

Terminals, with rules where they appear

TkAnd                : 
TkArray              : 
TkArrow              : 
TkAsig               : 2
TkAtoi               : 
TkCBlock             : 
TkCBracket           : 
TkClosePar           : 12
TkComma              : 
TkConcat             : 
TkDeclare            : 
TkDiv                : 6
TkDo                 : 
TkEqual              : 
TkFalse              : 
TkFi                 : 
TkFor                : 
TkGeq                : 10
TkGreater            : 11
TkGuard              : 
TkId                 : 1 2 14
TkIf                 : 
TkIn                 : 
TkInt                : 1
TkLeq                : 9
TkLess               : 8
TkMax                : 
TkMin                : 
TkMinus              : 4
TkMod                : 7
TkMult               : 5
TkNEqual             : 
TkNot                : 
TkNum                : 13
TkOBlock             : 
TkOBracket           : 
TkOd                 : 
TkOpenPar            : 12
TkOr                 : 
TkPlus               : 3
TkPrint              : 
TkPrintln            : 
TkRead               : 
TkRof                : 
TkSemiColon          : 1 2 3 4 5 6 7 8 9 10 11 13 14
TkSize               : 
TkSoForth            : 
TkString             : 
TkTo                 : 
TkTrue               : 
TkTwoPoints          : 1
error                : 

Nonterminals, with rules where they appear

assign               : 
declaration          : 0
expression           : 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12

Parsing method: LALR

state 0

    (0) S' -> . declaration
    (1) declaration -> . TkId TkTwoPoints TkInt TkSemiColon

    TkId            shift and go to state 2

    declaration                    shift and go to state 1

state 1

    (0) S' -> declaration .



state 2

    (1) declaration -> TkId . TkTwoPoints TkInt TkSemiColon

    TkTwoPoints     shift and go to state 3


state 3

    (1) declaration -> TkId TkTwoPoints . TkInt TkSemiColon

    TkInt           shift and go to state 4


state 4

    (1) declaration -> TkId TkTwoPoints TkInt . TkSemiColon

    TkSemiColon     shift and go to state 5


state 5

    (1) declaration -> TkId TkTwoPoints TkInt TkSemiColon .

    $end            reduce using rule 1 (declaration -> TkId TkTwoPoints TkInt TkSemiColon .)

