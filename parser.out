Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    TkAnd
    TkArray
    TkArrow
    TkAtoi
    TkCBlock
    TkConcat
    TkDeclare
    TkDo
    TkEqual
    TkFalse
    TkFi
    TkFor
    TkGuard
    TkIf
    TkIn
    TkMax
    TkMin
    TkNEqual
    TkNot
    TkOBlock
    TkOd
    TkOr
    TkPrint
    TkPrintln
    TkRead
    TkRof
    TkSize
    TkString
    TkTo
    TkTrue

Grammar

Rule 0     S' -> declaration
Rule 1     declaration -> TkId TkTwoPoints TkInt TkSemiColon
Rule 2     assign -> TkId TkAsig expression TkSemiColon
Rule 3     assign -> TkId TkAsig array TkSemiColon
Rule 4     array -> TkOBracket inarray TkCBracket
Rule 5     array -> TkOBracket TkNum TkSoForth TkNum TkCBracket
Rule 6     inarray -> TkNum TkComma inarray
Rule 7     inarray -> TkNum
Rule 8     expression -> expression TkPlus expression TkSemiColon
Rule 9     expression -> expression TkMinus expression TkSemiColon
Rule 10    expression -> expression TkMult expression TkSemiColon
Rule 11    expression -> expression TkDiv expression TkSemiColon
Rule 12    expression -> expression TkMod expression TkSemiColon
Rule 13    expression -> expression TkLess expression TkSemiColon
Rule 14    expression -> expression TkLeq expression TkSemiColon
Rule 15    expression -> expression TkGeq expression TkSemiColon
Rule 16    expression -> expression TkGreater expression TkSemiColon
Rule 17    expression -> TkOpenPar expression TkClosePar
Rule 18    expression -> TkNum TkSemiColon
Rule 19    expression -> TkId TkSemiColon

Terminals, with rules where they appear

TkAnd                : 
TkArray              : 
TkArrow              : 
TkAsig               : 2 3
TkAtoi               : 
TkCBlock             : 
TkCBracket           : 4 5
TkClosePar           : 17
TkComma              : 6
TkConcat             : 
TkDeclare            : 
TkDiv                : 11
TkDo                 : 
TkEqual              : 
TkFalse              : 
TkFi                 : 
TkFor                : 
TkGeq                : 15
TkGreater            : 16
TkGuard              : 
TkId                 : 1 2 3 19
TkIf                 : 
TkIn                 : 
TkInt                : 1
TkLeq                : 14
TkLess               : 13
TkMax                : 
TkMin                : 
TkMinus              : 9
TkMod                : 12
TkMult               : 10
TkNEqual             : 
TkNot                : 
TkNum                : 5 5 6 7 18
TkOBlock             : 
TkOBracket           : 4 5
TkOd                 : 
TkOpenPar            : 17
TkOr                 : 
TkPlus               : 8
TkPrint              : 
TkPrintln            : 
TkRead               : 
TkRof                : 
TkSemiColon          : 1 2 3 8 9 10 11 12 13 14 15 16 18 19
TkSize               : 
TkSoForth            : 5
TkString             : 
TkTo                 : 
TkTrue               : 
TkTwoPoints          : 1
error                : 

Nonterminals, with rules where they appear

array                : 3
assign               : 
declaration          : 0
expression           : 2 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17
inarray              : 4 6

Parsing method: LALR

state 0

    (0) S' -> . declaration
    (1) declaration -> . TkId TkTwoPoints TkInt TkSemiColon

    TkId            shift and go to state 2

    declaration                    shift and go to state 1

state 1

    (0) S' -> declaration .



state 2

    (1) declaration -> TkId . TkTwoPoints TkInt TkSemiColon

    TkTwoPoints     shift and go to state 3


state 3

    (1) declaration -> TkId TkTwoPoints . TkInt TkSemiColon

    TkInt           shift and go to state 4


state 4

    (1) declaration -> TkId TkTwoPoints TkInt . TkSemiColon

    TkSemiColon     shift and go to state 5


state 5

    (1) declaration -> TkId TkTwoPoints TkInt TkSemiColon .

    $end            reduce using rule 1 (declaration -> TkId TkTwoPoints TkInt TkSemiColon .)

