
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftTkAsignonassocTkLessTkLeqTkGeqTkGreaterleftTkPlusTkMinusleftTkMultTkDivTkModleftTkEqualTkNEqualleftTkAndTkOrrightTkNotleftTkOBracketTkCBracketleftTkConcatrightTkArrowTkAnd TkArray TkArrow TkAsig TkAtoi TkCBlock TkCBracket TkClosePar TkComma TkConcat TkDeclare TkDiv TkDo TkEqual TkFalse TkFi TkFor TkGeq TkGreater TkGuard TkId TkIf TkIn TkInt TkLeq TkLess TkMax TkMin TkMinus TkMod TkMult TkNEqual TkNot TkNum TkOBlock TkOBracket TkOd TkOpenPar TkOr TkPlus TkPrint TkPrintln TkRead TkRof TkSemiColon TkSize TkSoForth TkString TkTo TkTrue TkTwoPointsblock : TkOBlock TkDeclare start TkCBlock\n             | TkOBlock body TkCBlockbody : assign body\n            | gfor body\n            | gprint body\n            | gprintln body\n            | read body\n            | gdo body\n            | empty start : declaration start\n              | bodyempty :declaration : TkId TkTwoPoints tipo TkSemiColon\n                   | TkId TkComma listaid TkTwoPoints tipo TkSemiColonlistaid : TkId TkComma listaid\n               | TkIdtipo : TkInt\n            | TkArray TkOBracket TkNum TkSoForth TkNum TkCBracketassign : TkId TkAsig expression TkSemiColonassign : TkId TkAsig strexp TkSemiColonassign : TkId TkAsig array TkSemiColonarray : TkOBracket inarray TkCBracket\n             | TkOBracket TkNum TkSoForth TkNum TkCBracketinarray : TkNum TkComma inarray\n               | TkNumstrexp : TkString TkConcat strexp\n              | TkStringexpression : expression TkPlus expression\n                  | expression TkMinus expression\n                  | expression TkMult expression\n                  | expression TkDiv expression\n                  | expression TkMod expressionexpression : TkOpenPar expression TkCloseParexpression : TkSize TkOpenPar TkId TkClosePar\n                  | TkMax TkOpenPar TkId TkClosePar\n                  | TkMin TkOpenPar TkId TkClosePar\n                  | TkAtoi TkOpenPar TkId TkCloseParexpression : TkNumexpression : TkIdboolean : expression TkLess expression\n               | expression TkLeq expression\n               | expression TkGeq expression\n               | expression TkGreater expression\n               | boolean TkOr boolean\n               | boolean TkAnd boolean\n               | expression TkEqual expression\n               | expression TkEqual boolean\n               | boolean TkEqual expression\n               | boolean TkEqual boolean\n               | expression TkNEqual expression\n               | expression TkNEqual boolean\n               | boolean TkNEqual expression\n               | boolean TkNEqual booleanboolean : TkTrueboolean : TkFalseboolean : boolean TkNotread : TkRead TkId TkSemiColongfor : TkFor TkId TkIn expression TkTo expression TkArrow block TkRof TkSemiColongdo : TkDo boolean TkArrow block TkOd TkSemiColongprint : TkPrint strprint TkSemiColongprintln : TkPrintln strprint TkSemiColonstrprint : TkString TkConcat strprint\n                | TkId TkConcat strprint\n                | TkString\n                | TkId'
    
_lr_action_items = {'TkOBlock':([0,62,148,],[2,2,2,]),'$end':([1,22,47,],[0,-2,-1,]),'TkDeclare':([2,],[3,]),'TkId':([2,3,5,6,7,8,9,10,13,14,15,16,17,19,29,40,50,56,57,58,59,60,61,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,89,90,91,123,125,131,144,146,153,],[12,21,12,12,12,12,12,12,30,33,33,35,42,21,42,42,87,42,-60,33,33,-61,-57,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,119,120,121,122,-19,-20,-21,-13,87,42,-59,-14,-58,]),'TkFor':([2,3,5,6,7,8,9,10,19,57,60,61,89,90,91,123,144,146,153,],[13,13,13,13,13,13,13,13,13,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkPrint':([2,3,5,6,7,8,9,10,19,57,60,61,89,90,91,123,144,146,153,],[14,14,14,14,14,14,14,14,14,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkPrintln':([2,3,5,6,7,8,9,10,19,57,60,61,89,90,91,123,144,146,153,],[15,15,15,15,15,15,15,15,15,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkRead':([2,3,5,6,7,8,9,10,19,57,60,61,89,90,91,123,144,146,153,],[16,16,16,16,16,16,16,16,16,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkDo':([2,3,5,6,7,8,9,10,19,57,60,61,89,90,91,123,144,146,153,],[17,17,17,17,17,17,17,17,17,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkCBlock':([2,3,4,5,6,7,8,9,10,11,18,19,20,23,24,25,26,27,28,48,57,60,61,89,90,91,123,144,146,153,],[-12,-12,22,-12,-12,-12,-12,-12,-12,-9,47,-12,-11,-3,-4,-5,-6,-7,-8,-10,-60,-61,-57,-19,-20,-21,-13,-59,-14,-58,]),'TkAsig':([12,21,],[29,29,]),'TkString':([14,15,29,58,59,92,],[32,32,54,32,32,54,]),'TkTrue':([17,63,64,65,66,72,73,],[38,38,38,38,38,38,38,]),'TkFalse':([17,63,64,65,66,72,73,],[39,39,39,39,39,39,39,]),'TkOpenPar':([17,29,40,41,43,44,45,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[40,40,40,80,81,82,83,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TkSize':([17,29,40,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TkMax':([17,29,40,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TkMin':([17,29,40,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'TkAtoi':([17,29,40,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TkNum':([17,29,40,55,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,124,129,130,131,145,],[46,46,46,94,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,137,140,141,46,149,]),'TkTwoPoints':([21,87,88,138,],[49,-16,126,-15,]),'TkComma':([21,87,94,141,],[50,125,130,130,]),'TkOd':([22,47,98,],[-2,-1,132,]),'TkRof':([22,47,150,],[-2,-1,152,]),'TkOBracket':([29,86,],[55,124,]),'TkIn':([30,],[56,]),'TkSemiColon':([31,32,33,34,35,42,46,51,52,53,54,84,85,96,97,113,114,115,116,117,118,127,128,132,133,134,135,136,139,147,151,152,],[57,-64,-65,60,61,-39,-38,89,90,91,-27,123,-17,-62,-63,-28,-29,-30,-31,-32,-33,-26,-22,144,-34,-35,-36,-37,146,-23,-18,153,]),'TkConcat':([32,33,54,],[58,59,92,]),'TkArrow':([36,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,143,],[62,-54,-55,-39,-38,-56,-44,-45,-49,-48,-53,-52,-40,-41,-42,-43,-46,-47,-50,-51,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,148,]),'TkOr':([36,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,],[63,-54,-55,-39,-38,-56,-44,-45,63,-48,63,-52,-40,-41,-42,-43,-46,63,-50,63,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkAnd':([36,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,],[64,-54,-55,-39,-38,-56,-44,-45,64,-48,64,-52,-40,-41,-42,-43,-46,64,-50,64,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkEqual':([36,37,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,],[65,72,-54,-55,-39,-38,-56,-44,-45,-49,-48,-53,-52,-40,-41,-42,-43,-46,-47,-50,-51,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkNEqual':([36,37,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,],[66,73,-54,-55,-39,-38,-56,-44,-45,-49,-48,-53,-52,-40,-41,-42,-43,-46,-47,-50,-51,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkNot':([36,38,39,42,46,67,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,133,134,135,136,],[67,-54,-55,-39,-38,-56,67,67,67,-48,67,-52,-40,-41,-42,-43,-46,67,-50,67,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkLess':([37,42,46,102,104,109,111,113,114,115,116,117,118,133,134,135,136,],[68,-39,-38,68,68,68,68,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkLeq':([37,42,46,102,104,109,111,113,114,115,116,117,118,133,134,135,136,],[69,-39,-38,69,69,69,69,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkGeq':([37,42,46,102,104,109,111,113,114,115,116,117,118,133,134,135,136,],[70,-39,-38,70,70,70,70,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkGreater':([37,42,46,102,104,109,111,113,114,115,116,117,118,133,134,135,136,],[71,-39,-38,71,71,71,71,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkPlus':([37,42,46,51,79,95,102,104,105,106,107,108,109,111,113,114,115,116,117,118,133,134,135,136,143,],[74,-39,-38,74,74,74,74,74,74,74,74,74,74,74,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,74,]),'TkMinus':([37,42,46,51,79,95,102,104,105,106,107,108,109,111,113,114,115,116,117,118,133,134,135,136,143,],[75,-39,-38,75,75,75,75,75,75,75,75,75,75,75,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,75,]),'TkMult':([37,42,46,51,79,95,102,104,105,106,107,108,109,111,113,114,115,116,117,118,133,134,135,136,143,],[76,-39,-38,76,76,76,76,76,76,76,76,76,76,76,76,76,-30,-31,-32,-33,-34,-35,-36,-37,76,]),'TkDiv':([37,42,46,51,79,95,102,104,105,106,107,108,109,111,113,114,115,116,117,118,133,134,135,136,143,],[77,-39,-38,77,77,77,77,77,77,77,77,77,77,77,77,77,-30,-31,-32,-33,-34,-35,-36,-37,77,]),'TkMod':([37,42,46,51,79,95,102,104,105,106,107,108,109,111,113,114,115,116,117,118,133,134,135,136,143,],[78,-39,-38,78,78,78,78,78,78,78,78,78,78,78,78,78,-30,-31,-32,-33,-34,-35,-36,-37,78,]),'TkClosePar':([42,46,79,113,114,115,116,117,118,119,120,121,122,133,134,135,136,],[-39,-38,118,-28,-29,-30,-31,-32,-33,133,134,135,136,-34,-35,-36,-37,]),'TkTo':([42,46,95,113,114,115,116,117,118,133,134,135,136,],[-39,-38,131,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,]),'TkInt':([49,126,],[85,85,]),'TkArray':([49,126,],[86,86,]),'TkCBracket':([93,94,140,141,142,149,],[128,-25,147,-25,-24,151,]),'TkSoForth':([94,137,],[129,145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,62,148,],[1,98,150,]),'body':([2,3,5,6,7,8,9,10,19,],[4,20,23,24,25,26,27,28,20,]),'assign':([2,3,5,6,7,8,9,10,19,],[5,5,5,5,5,5,5,5,5,]),'gfor':([2,3,5,6,7,8,9,10,19,],[6,6,6,6,6,6,6,6,6,]),'gprint':([2,3,5,6,7,8,9,10,19,],[7,7,7,7,7,7,7,7,7,]),'gprintln':([2,3,5,6,7,8,9,10,19,],[8,8,8,8,8,8,8,8,8,]),'read':([2,3,5,6,7,8,9,10,19,],[9,9,9,9,9,9,9,9,9,]),'gdo':([2,3,5,6,7,8,9,10,19,],[10,10,10,10,10,10,10,10,10,]),'empty':([2,3,5,6,7,8,9,10,19,],[11,11,11,11,11,11,11,11,11,]),'start':([3,19,],[18,48,]),'declaration':([3,19,],[19,19,]),'strprint':([14,15,58,59,],[31,34,96,97,]),'boolean':([17,63,64,65,66,72,73,],[36,99,100,101,103,110,112,]),'expression':([17,29,40,56,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,131,],[37,51,79,95,37,37,102,104,105,106,107,108,109,111,113,114,115,116,117,143,]),'strexp':([29,92,],[52,127,]),'array':([29,],[53,]),'tipo':([49,126,],[84,139,]),'listaid':([50,125,],[88,138,]),'inarray':([55,130,],[93,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> TkOBlock TkDeclare start TkCBlock','block',4,'p_code','parser.py',27),
  ('block -> TkOBlock body TkCBlock','block',3,'p_code','parser.py',28),
  ('body -> assign body','body',2,'p_body','parser.py',33),
  ('body -> gfor body','body',2,'p_body','parser.py',34),
  ('body -> gprint body','body',2,'p_body','parser.py',35),
  ('body -> gprintln body','body',2,'p_body','parser.py',36),
  ('body -> read body','body',2,'p_body','parser.py',37),
  ('body -> gdo body','body',2,'p_body','parser.py',38),
  ('body -> empty','body',1,'p_body','parser.py',39),
  ('start -> declaration start','start',2,'p_start','parser.py',42),
  ('start -> body','start',1,'p_start','parser.py',43),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',46),
  ('declaration -> TkId TkTwoPoints tipo TkSemiColon','declaration',4,'p_declaration','parser.py',50),
  ('declaration -> TkId TkComma listaid TkTwoPoints tipo TkSemiColon','declaration',6,'p_declaration','parser.py',51),
  ('listaid -> TkId TkComma listaid','listaid',3,'p_listid','parser.py',56),
  ('listaid -> TkId','listaid',1,'p_listid','parser.py',57),
  ('tipo -> TkInt','tipo',1,'p_tipo','parser.py',62),
  ('tipo -> TkArray TkOBracket TkNum TkSoForth TkNum TkCBracket','tipo',6,'p_tipo','parser.py',63),
  ('assign -> TkId TkAsig expression TkSemiColon','assign',4,'p_assign_expr','parser.py',66),
  ('assign -> TkId TkAsig strexp TkSemiColon','assign',4,'p_assign_str','parser.py',71),
  ('assign -> TkId TkAsig array TkSemiColon','assign',4,'p_assign_arr','parser.py',76),
  ('array -> TkOBracket inarray TkCBracket','array',3,'p_array','parser.py',81),
  ('array -> TkOBracket TkNum TkSoForth TkNum TkCBracket','array',5,'p_array','parser.py',82),
  ('inarray -> TkNum TkComma inarray','inarray',3,'p_iarray','parser.py',85),
  ('inarray -> TkNum','inarray',1,'p_iarray','parser.py',86),
  ('strexp -> TkString TkConcat strexp','strexp',3,'p_expression_str','parser.py',89),
  ('strexp -> TkString','strexp',1,'p_expression_str','parser.py',90),
  ('expression -> expression TkPlus expression','expression',3,'p_expression_bin','parser.py',93),
  ('expression -> expression TkMinus expression','expression',3,'p_expression_bin','parser.py',94),
  ('expression -> expression TkMult expression','expression',3,'p_expression_bin','parser.py',95),
  ('expression -> expression TkDiv expression','expression',3,'p_expression_bin','parser.py',96),
  ('expression -> expression TkMod expression','expression',3,'p_expression_bin','parser.py',97),
  ('expression -> TkOpenPar expression TkClosePar','expression',3,'p_expression_group','parser.py',110),
  ('expression -> TkSize TkOpenPar TkId TkClosePar','expression',4,'p_expression_fun','parser.py',114),
  ('expression -> TkMax TkOpenPar TkId TkClosePar','expression',4,'p_expression_fun','parser.py',115),
  ('expression -> TkMin TkOpenPar TkId TkClosePar','expression',4,'p_expression_fun','parser.py',116),
  ('expression -> TkAtoi TkOpenPar TkId TkClosePar','expression',4,'p_expression_fun','parser.py',117),
  ('expression -> TkNum','expression',1,'p_expression_number','parser.py',121),
  ('expression -> TkId','expression',1,'p_expression_id','parser.py',126),
  ('boolean -> expression TkLess expression','boolean',3,'p_boolean_exp','parser.py',135),
  ('boolean -> expression TkLeq expression','boolean',3,'p_boolean_exp','parser.py',136),
  ('boolean -> expression TkGeq expression','boolean',3,'p_boolean_exp','parser.py',137),
  ('boolean -> expression TkGreater expression','boolean',3,'p_boolean_exp','parser.py',138),
  ('boolean -> boolean TkOr boolean','boolean',3,'p_boolean_exp','parser.py',139),
  ('boolean -> boolean TkAnd boolean','boolean',3,'p_boolean_exp','parser.py',140),
  ('boolean -> expression TkEqual expression','boolean',3,'p_boolean_exp','parser.py',141),
  ('boolean -> expression TkEqual boolean','boolean',3,'p_boolean_exp','parser.py',142),
  ('boolean -> boolean TkEqual expression','boolean',3,'p_boolean_exp','parser.py',143),
  ('boolean -> boolean TkEqual boolean','boolean',3,'p_boolean_exp','parser.py',144),
  ('boolean -> expression TkNEqual expression','boolean',3,'p_boolean_exp','parser.py',145),
  ('boolean -> expression TkNEqual boolean','boolean',3,'p_boolean_exp','parser.py',146),
  ('boolean -> boolean TkNEqual expression','boolean',3,'p_boolean_exp','parser.py',147),
  ('boolean -> boolean TkNEqual boolean','boolean',3,'p_boolean_exp','parser.py',148),
  ('boolean -> TkTrue','boolean',1,'p_boolean_true','parser.py',161),
  ('boolean -> TkFalse','boolean',1,'p_boolean_false','parser.py',165),
  ('boolean -> boolean TkNot','boolean',2,'p_boolean_not','parser.py',169),
  ('read -> TkRead TkId TkSemiColon','read',3,'p_read','parser.py',173),
  ('gfor -> TkFor TkId TkIn expression TkTo expression TkArrow block TkRof TkSemiColon','gfor',10,'p_cycle_for','parser.py',177),
  ('gdo -> TkDo boolean TkArrow block TkOd TkSemiColon','gdo',6,'p_cycle_do','parser.py',180),
  ('gprint -> TkPrint strprint TkSemiColon','gprint',3,'p_print','parser.py',183),
  ('gprintln -> TkPrintln strprint TkSemiColon','gprintln',3,'p_println','parser.py',186),
  ('strprint -> TkString TkConcat strprint','strprint',3,'p_strprint','parser.py',189),
  ('strprint -> TkId TkConcat strprint','strprint',3,'p_strprint','parser.py',190),
  ('strprint -> TkString','strprint',1,'p_strprint','parser.py',191),
  ('strprint -> TkId','strprint',1,'p_strprint','parser.py',192),
]
